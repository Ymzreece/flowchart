Here is a flowchart-style outline describing the main logic and structure of the provided code:

---

**1. Initialization and Setup**  
- Define the memory layout in Flash for user data and Bluetooth addresses.  
- Setup global variables and flags for menu, system state, user configuration, and key input.  
- Initialize UART and OLED display modules.  
- Provide a CRC8 calculation function for data integrity.  

---

**2. Key Input Handling**  
- Implement a key event queue allowing key presses to be pushed and popped safely from any thread.  
- Support external key scanning mode where keys are scanned in a separate thread.  
- Define an advanced key reading function with debouncing and long-press detection for three keys:  
  - Reads raw hardware GPIO states for keys.  
  - Uses a state machine to filter noise and recognize short and long presses.  
  - Returns codes for short press (1-3) and long press (11-13) events.  

---

**3. Main Menus and User Interface**  
- **Main Icon Menu (menu1):**  
  - Display 3 icon options using OLED.  
  - Navigate menu left/right with keys 1/3, select with key 2.  
  - Long press key 3 activates "silent do not disturb" mode.  
  - Returns the selected menu index.  

- **Delete Menu (menu2_delete):**  
  - Simple two-option delete menu: reset all or reset single user.  
  - Navigate menu with keys 1 and 3, select with key 2.  

- **Delete Menu with Return (menu2_delete_with_return):**  
  - Adds a "Back" option to the delete menu.  
  - Similar navigation and selection as above; selecting back returns 0.  

- **Angle and Speed Configuration Menu (menu3_angle_speed):**  
  - Menu with 5 options: Angle, Speed, Auto Close Flag, Save, Exit.  
  - Navigate with keys 1 and 3, select to cycle through settings or confirm.  
  - Returns 1 on save, 0 on exit without saving.  
  - Displays configuration options with corresponding visual updates and highlights.  

- **Else Mode Menu (menu2_else_mode_with_return):**  
  - Options: Do Not Disturb, Door Reset, Back.  
  - Navigate and select similarly to other menus.  

---

**4. Hidden Door Calibration Menu (handle_Reset_menu):**  
- Display instructions to open door to the maximum angle.  
- Wait for any key press to confirm calibration.  
- Display a blocking progress bar simulating calibration (10 seconds).  
- Show success screen and return to main menu.  

---

**5. Menu Handling and State Transitions**  
- `handle_config_menu`:  
  - On entering configuration menu:  
    - Display start animation and load user ID 1â€™s config from Flash (or defaults).  
    - Show current config on OLED.  
    - Enter angle/speed configuration (menu3_angle_speed).  
    - If user saves config:  
      - Erase all user configs from Flash.  
      - Write new config with CRC and verify correctness.  
      - Show progress bar during saving.  
      - Show success or failure message.  
    - If cancel, return to idle.  

- `handle_delete_menu`:  
  - Call delete menu with return option.  
  - Depending on choice: delete all users or delete single user.  
  - Show progress bar during deletion.  
  - Update system state based on success or failure.  

- `handle_else_mode_menu`:  
  - Call else mode menu.  
  - Depending on choice: enable "Do Not Disturb" mode, door reset calibration, or back.  

- `process_main_menu`:  
  - Calls one of the above handlers based on main menu choice.  
  - Update system states as needed to return to idle or other states.  

---

**6. Flash Memory Operations**  
- Functions to calculate and verify CRC for user config and BLE addresses.  
- Safe read/write of 256-byte user config structs from/to Flash with 8-byte alignment.  
- Erase all user data pages in Flash before writing new config to avoid corruption.  
- Load default configs if Flash is empty.  
- Separate Flash area and functions for Bluetooth MAC address storage and validation.  

---

**7. Flash Task Loop (Flash_Task)**  
- Infinite loop handling system states and timed actions:  
  - In Do Not Disturb mode, show minimal or no UI, allow key to exit this mode.  
  - In idle state, after timeout, enter low-power mode and reset Bluetooth connections.  
  - Handle face recognition verification states and show UI messages accordingly.  
  - In menu active state, display main menu and process user selections through the menu handlers.  
  - Show various status messages on OLED based on success or failure of operations.  

---

**8. Utility Functions**  
- Blocking progress bar display with smooth updates using OLED.  
- CRC8 calculation functions for data integrity checking.  
- UART send frame formation with CRC for custom DIY frame protocol.  

---

This overall structure enables a multi-level menu system on an embedded STM32 device driven by 3 keys, supporting data storage and calibration procedures, with user feedback on an OLED screen. It safely handles hardware button inputs with debouncing and long press detection, and manages Flash memory for persistent configuration and Bluetooth address storage.

---

If you want, I can provide the above outline in JSON format with stage titles and step descriptions.